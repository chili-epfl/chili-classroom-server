
// We create a default activity (a game) for our moves to be in. 
//TODO: In the real case, it will be generated by each new game in the client, so this should disappear!!
if (Activities.find().count()===0){
	Activities.insert({
		id: 1,
		type: 'battleship-collab',
		current_state: {
			active: false,
			turn: 0,
			phase: null,
			board: [],
			num_virus_cells: 0,
			team1_points: 0,
			team2_points: 0,
			team3_points: 0,
			team4_points: 0			
		}
	});
}


//Some dummy moves for all four teams, using a basic parallellogram
//Coordinate system goes from -1 to 1
//Rotation of shapes is clockwise, in degrees
//The order of transformations is calculated as origin --> translation --> rotation
if (Moves.find().count() === 0) {

	Moves.insert({
		activity_id: 1,
		turn: 1,
		team: 1,
		origin: [-1,1],
		polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
		rotation: 90,
		translation: [0,0],
		illegal: false
	});
	Moves.insert({
		activity_id: 1,
		turn: 1,
		team: 2,
		origin: [1,1],
		polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
		rotation: 180,
		translation: [0,0],
		illegal: false
	});
	Moves.insert({
		activity_id: 1,
		turn: 1,
		team: 3,
		origin: [1,-1],
		polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
		rotation: 270,
		translation: [0,0],
		illegal: false
	});
	Moves.insert({
		activity_id: 1,
		turn: 1,
		team: 4,
		origin: [-1,-1],
		polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
		rotation: 0,
		translation: [0,0],
		illegal: false
	});


	for (var i=2; i<=10; i++){
		//We go by turn number
		var even = false;
		if(i%2 === 0) even = true;

		var half = Math.floor(i/2);

		Moves.insert({
			activity_id: 1,
			turn: i,
			team: 1,
			origin: even ? [-1+((half-1)*0.2),1-((half-1)*0.2)] : [-1+((half-1)*0.2),1-(half*0.2)],
			polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
			rotation: 90,
			translation: even ? [0,-0.2] : [0.2,0],
			illegal: false
		});
		Moves.insert({
			activity_id: 1,
			turn: i,
			team: 2,
			origin: even ? [1-((half-1)*0.2),1-((half-1)*0.2)] : [1-((half)*0.2),1-((half-1)*0.2)],
			polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
			rotation: 180,
			translation: even ? [-0.2,0] : [0,-0.2],
			illegal: false
		});
		Moves.insert({
			activity_id: 1,
			turn: i,
			team: 3,
			origin: even ? [1-((half-1)*0.2),-1+((half-1)*0.2)] : [1-((half-1)*0.2),-1+(half*0.2)],
			polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
			rotation: 270,
			translation: even ? [0,0.2] : [-0.2,0],
			illegal: false
		});
		Moves.insert({
			activity_id: 1,
			turn: i,
			team: 4,
			origin: even ? [-1+((half-1)*0.2),-1+((half-1)*0.2)] : [-1+((half)*0.2),-1+((half-1)*0.2)],
			polygon: [[0,0],[0.2,0],[0.4,0.2],[0.2,0.2]],
			rotation: 0,
			translation: even ? [0.2,0] : [0,0.2],
			illegal: false
		});

	}

}
